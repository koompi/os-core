#!/bin/bash

# Description: Script to build KOOMPI-Toolchain
# URL: 
# Maintainer: HangsiaHong, hangsia@koompi.org
# Organization: KOOMPI, koompi.com
# Depends on:

kfs_dirs() {
    mkdir -pv $KFS/dev
	mknod -m 600 $KFS/dev/console c 5 1 || true
	mknod -m 666 $KFS/dev/null c 1 3 || true

	mkdir -pv $KFS/bin $KFS/usr/{lib,bin} $KFS/etc || true
	ln -svf /tools/bin/{bash,cat,chmod,dd,echo,ln,mkdir,pwd,rm,stty,touch} $KFS/bin
	ln -svf /tools/bin/{env,install,perl,printf}         $KFS/usr/bin
	ln -svf /tools/lib/libgcc_s.so{,.1}                  $KFS/usr/lib
	ln -svf /tools/lib/libstdc++.{a,so{,.6}}             $KFS/usr/lib

	ln -svf bash $KFS/bin/sh
	ln -svf /proc/self/mounts $KFS/etc/mtab

cat > $KFS/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
daemon:x:6:6:Daemon User:/dev/null:/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/var/run/dbus:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false
EOF

cat > $KFS/etc/group << "EOF"
root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
messagebus:x:18:
input:x:24:
mail:x:34:
kvm:x:61:
wheel:x:97:
nogroup:x:99:
users:x:999:
EOF


    # pkgutils
	mkdir -p $KFS/var/lib/pkg/{pkg,src,work}
	touch $KFS/var/lib/pkg/db# pkgutils
	mkdir -p $KFS/var/lib/pkg/{pkg,src,work}
	touch $KFS/var/lib/pkg/db
}

mount_pseudo() {
	mkdir -p $KFS/{dev,run,proc,sys}
	mount --bind /dev $KFS/dev
	mount -t devpts devpts $KFS/dev/pts -o gid=5,mode=620
	mount -t proc proc $KFS/proc
	mount -t sysfs sysfs $KFS/sys
	mount -t tmpfs tmpfs $KFS/run
	if [ -h $KFS/dev/shm ]; then
	  mkdir -p $KFS/$(readlink $KFS/dev/shm)
	fi
}

umount_pseudo() {
	unmount $KFS/dev/pts
	unmount $KFS/dev
	unmount $KFS/run
	unmount $KFS/proc
	unmount $KFS/sys
}

unmount() {
	while true; do
		mountpoint -q $1 || break
		umount $1 2>/dev/null
	done
}

runinchroot() {
	pushd $KFS &>/dev/null
	mount_pseudo
	cp -L /etc/resolv.conf $KFS/etc/
	chroot "$KFS" $ENVKFS -i \
	    HOME=/root                  \
	    TERM="$TERM"                \
	    PS1='(kfs chroot) \u:\w\$ ' \
	    PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin $@
	retval=$?
	umount_pseudo
	popd &>/dev/null
	return $retval
}

interrupted() {
	die "script $(basename $0) aborted!"
}

die() {
	[ "$@" ] && printerror $@
	umount_pseudo
	exit 1
}

printerror() {
	echo -e "ERROR: $@"
}

trap "interrupted" SIGHUP SIGINT SIGQUIT SIGTERM

CWD=$PWD

source $CWD/kmp-config

if [ $(id -u) != 0 ]; then
	echo "$0 script need to run as root!"
	exit 1
fi

if [ -x $KFS/usr/bin/env ]; then
	ENVKFS=/usr/bin/env
else
	ENVKFS=/tools/bin/env
fi

##------PKGS------#
PKGS="filesystem linux-api-headers man-pages glibc libndp tzdata zlib bzip2 file readline m4 bc binutils gmp mpfr mpc attr acl shadow gcc
	pkg-config ncurses libtool dialog libcap sed psmisc iana-etc bison flex grep bash gdbm gperf expat inetutils linux-pam
	perl perl-xml-parser intltool autoconf autoconf2.13 automake libuv xz kmod gettext elfutils libffi openssl python3 python3-setuptools ninja meson coreutils
	diffutils gawk findutils groff fuse2 grub less gzip iproute2 kbd libpipeline make patch man-db tar texinfo vim procps-ng
	util-linux e2fsprogs sysklogd eudev kfs-bootscripts linux-firmware libarchive mkinitramfs linux libtasn1 p11-kit ca-certificates 
	wget pkgutils libnl dbus libxml2 dhcpcd wpa_supplicant lzo lz4 squashfs-tools popt efivar pciutils efibootmgr libpng which freetype2 dosfstools grub-efi
	curl cmake ports httpup gpm libevent links mtools syslinux libburn libisofs libisoburn fakeroot sysvinit libgpg-error libassuan libgcrypt libksba npth pinentry
	gnupg openssh libssh2 sqlite python2 llvm sgml-common unzip docbook-xml docbook-xsl libxslt glib gobject-introspection polkit pixman git graphviz vala nspr nss pcre slang newt cairo python3-cairo python3-gobject3
	icu js78 networkmanager sudo"

XORG="util-macros xorgproto libxau libxdmcp xcb-proto libxcb xtrans libx11 libxext libfs libice libsm libxscrnsaver libxt libxmu
	libxpm libxaw libxfixes libxcomposite libxrender libxcursor libxdamage libfontenc libxfont2 libxft libxi libxinerama
	libxrandr libxres libxtst libxv libxvmc libxxf86dga libxxf86vm libdmx libpciaccess libxkbfile libxshmfence
	xcb-util xcb-util-image xcb-util-keysyms xcb-util-renderutil xcb-util-wm"

if [ ! -f $KFS/var/lib/pkg/db ]; then
	kfs_dirs
fi


rm -fr $KFS/usr/ports
mkdir -p $KFS/usr/ports/
echo "==> Copying ports"
cp -Ra ports/* $KFS/usr/ports/

for pkg in $PKGS; do
	case $pkg in
		filesystem|gcc|bash|perl|coreutils) runinchroot pkgin -i -ic $pkg || die;;
		*) runinchroot pkgin -i $pkg || die;;
	esac
done

exit 0
